{
    "Print to console": {
        "prefix": "clg",
        "body": [
            "console.log($0)"
        ],
        "description": "Log output to console"
    },
    "Create express router": {
        "prefix": "exr",
        "body": [
            "const { Router } = require('express')",
            "",
            "const router = Router()",
            "",
            "router.$0",
            "",
            "module.exports = router"
        ]
    },
    "Create full express router": {
        "prefix": "exrf",
        "body": [
            "const { Router } = require('express')",
            "",
            "const router = Router()",
            "",
            "router.get('/', async (req, res) => {",
            "",
            "})",
            "",
            "router.get('/:id', async (req, res) => {",
            "",
            "})",
            "",
            "router.post('/', async (req, res) => {",
            "",
            "})",
            "",
            "router.put('/:id', async (req, res) => {",
            "",
            "})",
            "",
            "router.patch('/:id', async (req, res) => {",
            "",
            "})",
            "",
            "router.delete('/:id', async (req, res) => {",
            "",
            "})",
            "",
            "module.exports = router"
        ]
    },
    "Create Mongoose Connection": {
        "prefix": "mc",
        "body": [
            "const mongoose = require('mongoose')",
            "",
            "mongoose",
            "    .connect(process.env.MONGODB_URL || 'mongodb://localhost:27017', {",
            "        useNewUrlParser: true,",
            "        useUnifiedTopology: true,",
            "        useCreateIndex: true",
            "    })",
            "    .then(() => console.log('Connected to MongoDB...'))",
            "    .catch(err => {",
            "        console.log(err)",
            "        process.exit(1)",
            "    })",
            "",
            "module.exports = mongoose.connection"
        ]
    },
    "Create Mongoose Model": {
        "prefix": "mm",
        "body": [
            "const mongoose = require('mongoose')",
            "",
            "const $1Schema = new mongoose.Schema({",
            "    $0",
            "}, {",
            "    timestamps: true",
            "})",
            "",
            "module.exports = mongoose.model('$1', $1Schema)"
        ]
    },
    "Create React Functional Component": {
        "prefix": "rfc",
        "body": [
            "import React from 'react'",
            "",
            "const $TM_FILENAME_BASE = () => {",
            "    return (",
            "        <>",
            "            $0",
            "        </>",
            "    )",
            "}",
            "",
            "export default $TM_FILENAME_BASE"
        ]
    },
    "Create React Functional Component with props": {
        "prefix": "rfcp",
        "body": [
            "import React from 'react'",
            "",
            "const $TM_FILENAME_BASE = props => {",
            "    return (",
            "        <>",
            "            $0",
            "        </>",
            "    )",
            "}",
            "",
            "export default $TM_FILENAME_BASE"
        ]
    }
}